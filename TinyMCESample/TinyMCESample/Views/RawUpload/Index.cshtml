@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <title>File Upload</title>
    <style type="text/css">
        #main {
            width: 700px;
            height: 400px;
            margin: 0 auto 0 auto;
            border: 1px solid gray;
        }

            #main #sidebar {
                float: left;
                width: 199px;
                height: 400px;
                border-right: 1px solid gray;
            }

            #main #container {
                float: left;
                width: 500px;
                height: 400px;
            }

        #dnd-holder {
            margin: 0;
            border: 2.5px dashed #ccc;
            width: 100%;
            height: 75px;
            -moz-box-sizing: border-box;
            -webkit-box-sizing: border-box;
            box-sizing: border-box;
            padding: 5px;
            overflow-y: scroll;
        }

            #dnd-holder li {
                position: relative;
                float: left;
                margin-right: 10px;
                list-style-type: none;
            }

                #dnd-holder li div.icon-holder {
                    position: absolute;
                    top: 5px;
                    right: 5px;
                    font-size: 12px;
                }

            #dnd-holder.hover {
                border: 2.5px dashed #0c0;
            }

        #upload-btn-holder {

            margin: 5px 0;
        }

        #upload-btn {
            width: 100%;
            cursor: pointer;
        }

        #upload-btn:disabled {
            
            cursor: default;
        }

        .inner {
            padding: 10px;
        }

        .hidden {
            display: none !important;
        }

        .fail {
            background: #c00;
            padding: 2px;
            color: #fff;
        }

        .error {
            text-align: center;
            color: #c00;
        }

        .clearfix {
            clear: both;
        }
    </style>
</head>
<body>
    <div id="main">
        <div id="sidebar">
            <div class="inner">
            </div>
        </div>
        <div id="container">
            <div class="inner" data-bind="visible: isAvailable">
                <p id="filereader">File API & FileReader API not supported</p>
                <p id="formdata">XHR2's FormData is not supported</p>
                <p id="progress">XHR2's upload progress isn't supported</p>
                <ul data-bind="foreach: selectedFiles" id="dnd-holder">
                    <li>
                        <div class="icon-holder">
                            <a data-bind="click: $root.remove" href="#">Remove</a>
                        </div>
                        <img data-bind="attr: { src: result }" height="60" alt="image" />
                    </li>
                </ul>
                <div class="clearfix"></div>
                <div id="upload-btn-holder">
                    <button data-bind="click: uploadFiles, enable: selectedFiles().length > 0" id="upload-btn" type="button">Upload</button>
                </div>
                <div id="images-holder"></div>
            </div>
            <div class="inner error" data-bind="visible: !isAvailable">
                Image Manager is not supported without a category specified!
            </div>
        </div>
        <div class="clearfix"></div>
    </div>
    <script src="~/Scripts/jquery-1.9.1.js"></script>
    <script src="~/Scripts/knockout-2.3.0.js"></script>
    <script>
        (function () {

            // 1-) Test the browser capabilities
            // 2-) Determine the allowed MIME types
            // 3-) handle drag and drop - http://www.sitepoint.com/html5-file-drag-and-drop/
            // 4-) preview dropped files - http://www.sitepoint.com/html5-javascript-open-dropped-files/
            // 5-) upload files
            //     http://www.sitepoint.com/html5-ajax-file-upload/
            //     http://html5demos.com/dnd-upload

            var categoryParameter = 'category',
                holder = document.getElementById('dnd-holder'),
                tests = {
                    filereader: typeof FileReader != 'undefined',
                    dnd: 'draggable' in document.createElement('span'),
                    formdata: !!window.FormData,
                    progress: "upload" in new XMLHttpRequest
                },
                support = {
                    filereader: document.getElementById('filereader'),
                    formdata: document.getElementById('formdata'),
                    progress: document.getElementById('progress')
                },
                acceptedTypes = {
                    'image/png': true,
                    'image/jpeg': true,
                    'image/gif': true
                },
                getParameterByName = function (name) {
                    name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
                    var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
                        results = regex.exec(location.search);

                    return results == null ? undefined : decodeURIComponent(results[1].replace(/\+/g, " "));
                },

                vm = {
                    selectedFiles: ko.observableArray(),

                    isAvailable: getParameterByName(categoryParameter) !== undefined && getParameterByName(categoryParameter) !== "",

                    remove: function (file) {
                        vm.selectedFiles.remove(file);
                    },

                    uploadFiles: function () {

                        var formData = new FormData(),
                            url = '/api/upload?category=' + getParameterByName(categoryParameter),
                            method = 'POST';

                        $.each(vm.selectedFiles(), function (i, data) {
                            formData.append('file', data.file);
                        });

                        // http://stackoverflow.com/questions/5392344/sending-multipart-formdata-with-jquery-ajax
                        $.ajax({
                            type: method,
                            url: url,
                            data: formData,
                            cache: false,
                            contentType: false,
                            processData: false,
                            success: function (data) {
                                console.log(data);
                            }
                        });
                    }
                };

            "filereader formdata progress".split(' ').forEach(function (api) {

                if (tests[api] === false) {
                    support[api].className = 'fail';
                }
                else {
                    support[api].className = 'hidden';
                }
            });

            if (tests.dnd) {

                holder.ondragover = function () {
                    this.className = 'hover';
                    return false;
                };

                holder.ondragend = function () {
                    this.className = '';
                    return false;
                };

                holder.ondrop = function (e) {
                    this.className = '';
                    e.preventDefault();
                    readfiles(e.dataTransfer.files);
                };
            }

            function readfiles(files) {

                var formData = tests.formdata ? new FormData() : null;
                for (var i = 0; i < files.length; i++) {

                    if (tests.formdata) {
                        formData.append('file', files[i]);
                        previewfile(files[i]);
                    }
                }
            }

            function previewfile(file) {

                if (tests.filereader === true && acceptedTypes[file.type] === true) {

                    var reader = new FileReader();
                    reader.onload = function (event) {

                        //var image = new Image();
                        //image.src = event.target.result;
                        //image.height = 60;
                        //holder.appendChild(image);

                        vm.selectedFiles.push({
                            file: file,
                            result: event.target.result
                        });
                    };

                    reader.readAsDataURL(file);
                }
                else {

                    holder.innerHTML += '<p>Uploaded ' + file.name + ' ' + (file.size ? (file.size / 1024 | 0) + 'K' : '');
                    console.log(file);
                }
            }

            ko.applyBindings(vm);

        }());
    </script>
</body>



















</html>